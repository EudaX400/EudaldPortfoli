---

import System from "../../public/Icons/System.astro";
import Sun from "../../public/Icons/Sun.astro";
import Moon from "../../public/Icons/Moon.astro";

const THEMES = ["Light", "Dark", "System"];
---

<div class="relative ml-1 mr-1">
  <button
    transition:persist
    id="theme-toggle-btn"
    class="appearance-none border-none flex hover:scale-125 transition"
  >
    <span class="sr-only">Elige el tema</span>
    <Sun id="light" class="theme-toggle-icon size-5 transition-all" />
    <Moon id="dark" class="theme-toggle-icon absolute size-5 transition-all" />
    <System
      id="system"
      class="theme-toggle-icon absolute size-5 transition-all"
    />
  </button>
  <div
    transition:persist
    id="themes-menu"
    class="absolute hidden scale-80 top-8 right-0 text-sm p-1 min-w-[8rem] rounded-md border border-green-700 bg-white/90 dark:bg-gray-900/90 shadow-[0_3px_10px_rgb(0,0,0,0.2)] backdrop-blur-md"
  >
    <ul>
      {
        THEMES.map((theme) => (
          <li class="themes-menu-option px-2 py-1.5 cursor-default hover:bg-neutral-400/40 dark:hover:bg-gray-500/50 rounded-sm">
            {theme}
          </li>
        ))
      }
    </ul>
  </div>
</div>

<style>
  #themes-menu.open {
    display: inline;
    animation: scale-up-center 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
  }

  @keyframes scale-up-center {
    from {
      transform: scale(0.8);
      opacity: 0;
    }

    to {
      transform: scale(1);
      opacity: 1;
    }
  }
</style>

<script type="module" is:inline>
  import { handleThemeChange, getThemePreference } from "/src/utils/themeManager.js";
  const themesMenu = document.getElementById("themes-menu");

  // Función para actualizar el tema cuando la página se carga o cambia
  const updateTheme = () => {
    const currentTheme = getThemePreference();
    handleThemeChange(currentTheme);
  };

  // Inicializa el tema cuando la página carga
  updateTheme();

  document.addEventListener("click", () => themesMenu.classList.remove("open"));

  document.getElementById("theme-toggle-btn").addEventListener("click", (e) => {
    e.stopPropagation();
    const isClosed = !themesMenu.classList.contains("open");
    themesMenu.classList[isClosed ? "add" : "remove"]("open");
  });

  document.querySelectorAll(".themes-menu-option").forEach((element) => {
    element.addEventListener("click", (e) => {
      const selectedTheme = e.target.innerText.toLowerCase().trim();
      localStorage.setItem("theme", selectedTheme);
      updateTheme();
    });
  });

  document.addEventListener("astro:after-swap", () => {
    updateTheme();
  });
</script>
